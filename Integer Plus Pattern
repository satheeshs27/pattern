Integer Plus Pattern
````````````````````
The program must accept an integer N as the input. The program must print the desired pattern as
shown in the Example Input/Output section.

Note: N is always an odd integer.

Boundary Condition(s):
3 <= N <= 25

Input Format:
The first line contains N.

Output Format:
The lines containing the desired pattern as shown in the Example Input/Output section.

Example Input/Output 1:
Input:
5

Output:
5 4 3 2 1 2 3 4 5
4 4 3 2 1 2 3 4 4
3 3 3 2 1 2 3 3 3
2 2 2 2 1 2 2 2 2
1 1 1 1 1 1 1 1 1
2 2 2 2 1 2 2 2 2 
3 3 3 2 1 2 3 3 3
4 4 3 2 1 2 3 4 4
5 4 3 2 1 2 3 4 5

Example Input/Output 2:
Input:
3

Output:
3 2 1 2 3
2 2 1 2 2
1 1 1 1 1
2 2 1 2 2
3 2 1 2 3
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		String arr[] = new String[n];
		
		for(int i = 0; i < n - 1; i++){
		    arr[i] = (n - i + " ").repeat(i + 1);
		    for(int j = 0; j < n - i - 1; j++){
		        arr[i] += (n - i - j - 1 + " ");
		    }
		    for(int j = 1; j < n - i - 1; j++){
		        arr[i] += (j + 1 + " ");
		    }
		    arr[i] += (n - i + " ").repeat(i + 1);
		  System.out.println(arr[i]);
		}
		System.out.println("1 ".repeat((n * 2) - 1));
		for(int i = n - 2; i >= 0; i--){
		    System.out.println(arr[i].substring(0));
		}
        
	}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
