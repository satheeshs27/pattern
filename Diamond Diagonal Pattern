DIAMOND DIAGONAL PATTERN
````````````````````````
The program must accept an integer N and a character CH as the input. The program must print the
desired pattern as shown in the Example Input/Output section.

Boundary Condition(s):
4 <= N <= 50

Input Format:
The first line contains N and CH separated by a space.

Output Format:
The lines contain the desired pattern as shown in the Example Input/Output section.

Example Input/Output 1:
Input:
5 *

Output:
----*
---***
--*-*-*
-*--*--*
*********
-*--*--*
--*-*-*
---***
----*

Example Input/Output 2:
Input:
6 #

Output:
-----#
----###
---#-#-#
--#--#--#
-#---#---#
###########
-#---#---#
--#--#--#
---#-#-#
----###
-----#

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
public class Hello {

    public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();
		char ch = sc.next().charAt(0);
		
		for(int i = 0; i < N - 1; i++){
		    System.out.print("-".repeat(N - i - 1));
		    for(int j = 0; j < (i + 1) * 2 - 1; j++){
		        if(j == 0 || j == i || j == (i + 1) * 2 - 2) System.out.print(ch);
		        else System.out.print("-");
		    }
		    System.out.println();
		}
		System.out.println((ch+"").repeat(N * 2 - 1));
		
		for(int i = 0; i < N - 1; i++)
		{
		    System.out.print("-".repeat(i + 1));
		    for(int j = 0; j < ((N * 2 - 1) - (i + 1) * 2); j++){
		        if(j == 0 || j == ((N * 2 - 1) - (i + 1) * 2) - 1 || j == N - i - 2)
		            System.out.print(ch);
		        else
		            System.out.print("-");
		    }
		    System.out.println();
		}

	}
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
