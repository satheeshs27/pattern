Binary Layers - Diamond Cut Pattern
```````````````````````````````````
The program must accept an integer N as the input. The program must print the desired pattern as
shown in the Example Input/Output section.

Boundary Condition(s):
1 <= N <= 100

Input Format:
The first line contains N.

Output Format:
The lines contain the desired pattern as shown in the Example Input/Output section.

Example Input/Output 1:
Input:
5

Output:
####1
###000
##11111
#0100010
101010101
#0100010
##11111
###000
####1

Explanation:
The binary layers pattern for 5 is given below.
111111111
100000001
101111101
101000101
101010101
101000101
101111101
100000001
111111111
Here, the diamond part of the above pattern is printed as the output.

Example Input/Output 2:
Input:
4

Output:
###0
##111
#10001
0101010
#10001
##111
###0

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();
		
		for(int i = 0; i < N * 2 - 1; i++){
		    for(int j = 0; j < N * 2 - 1; j++){
		        int top = i;
		        int bot = j;
		        int lef = (2 * N - 2) - i;
		        int rig = (2 * N - 2) - j;
		        
		        int min = N - Math.min(Math.min(top, bot), Math.min(lef, rig));
		        if(j == N + i)
		            break;
		        if(i >= N && j == (N) + N * 2 - i - 2)
		            break;
		        //System.out.print((N * 2) - i - 2 + " ");
		        if((i < N && j < N - i - 1) || (i >= N && j <= i - N))
		            System.out.print("#");
		        else  
		            System.out.print(min % 2 == 1 ? 1 : 0);
		    }
		    System.out.println();
		}

	}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
