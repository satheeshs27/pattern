Two Triangles Pattern - Integers & Alphabets
--------------------------------------------

The program must accept an odd integer N as the input. The program must print the desired pattern
as shown in the Example Input/Output section.

Boundary Condition(s):
3 <= N <= 999

Input Format:
The first line contains N.

Output Format:
The lines containing the desired pattern as shown in the Example Input/Output section.

Example Input/Output 1:
Input:
5

Output:
1 * * * * a
2 3 * * b c
4 5 6 d e f
7 8 * * g h
9 * * * * i

Example Input/Output 2:
Input:
7

Output:
1 * * * * * * a
2 3 * * * * b c
4 5 6 * * d e f
7 8 9 10 g h i j
11 12 13 * * k l m
14 15 * * * * n o
16 * * * * * * p

Example Input/Output 3:
Input:
11

Output:
1 * * * * * * * * * * a 
2 3 * * * * * * * * b c 
4 5 6 * * * * * * d e f 
7 8 9 10 * * * * g h i j 
11 12 13 14 15 * * k l m n o 
16 17 18 19 20 21 p q r s t u 
22 23 24 25 26 * * v w x y z 
27 28 29 30 * * * * a b c d 
31 32 33 * * * * * * e f g 
34 35 * * * * * * * * h i 
36 * * * * * * * * * * j
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		int c = 1;
		char ch = 'a';
		for(int i = 0; i < n; i++){
		    int number = i <= (n / 2) ? i : n - i - 1;
		    
		    for(int j = 0; j <= number; j++){
		        System.out.print(c++ + " ");
		    }
		    System.out.print("* ".repeat((n + 1) - (2 * (number + 1))));
		    for(int j = 0; j <= number; j++){
		        if(ch > 'z')
		            ch = 'a';
		        System.out.print(ch++ + " ");
		    }
		    System.out.println();
		}

	}
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
